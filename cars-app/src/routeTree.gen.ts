/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const RegisterLazyImport = createFileRoute('/register')()
const ProfileLazyImport = createFileRoute('/profile')()
const LoginLazyImport = createFileRoute('/login')()
const IndexLazyImport = createFileRoute('/')()
const TypesIndexLazyImport = createFileRoute('/types/')()
const TypesCreateLazyImport = createFileRoute('/types/create')()
const TypesIdLazyImport = createFileRoute('/types/$id')()
const ModelsCreateLazyImport = createFileRoute('/models/create')()
const ModelsIdLazyImport = createFileRoute('/models/$id')()
const TypesEditIdLazyImport = createFileRoute('/types/edit/$id')()
const ModelsEditIdLazyImport = createFileRoute('/models/edit/$id')()

// Create/Update Routes

const RegisterLazyRoute = RegisterLazyImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const ProfileLazyRoute = ProfileLazyImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const TypesIndexLazyRoute = TypesIndexLazyImport.update({
  id: '/types/',
  path: '/types/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/types/index.lazy').then((d) => d.Route))

const TypesCreateLazyRoute = TypesCreateLazyImport.update({
  id: '/types/create',
  path: '/types/create',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/types/create.lazy').then((d) => d.Route))

const TypesIdLazyRoute = TypesIdLazyImport.update({
  id: '/types/$id',
  path: '/types/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/types/$id.lazy').then((d) => d.Route))

const ModelsCreateLazyRoute = ModelsCreateLazyImport.update({
  id: '/models/create',
  path: '/models/create',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/models/create.lazy').then((d) => d.Route))

const ModelsIdLazyRoute = ModelsIdLazyImport.update({
  id: '/models/$id',
  path: '/models/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/models/$id.lazy').then((d) => d.Route))

const TypesEditIdLazyRoute = TypesEditIdLazyImport.update({
  id: '/types/edit/$id',
  path: '/types/edit/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/types/edit/$id.lazy').then((d) => d.Route),
)

const ModelsEditIdLazyRoute = ModelsEditIdLazyImport.update({
  id: '/models/edit/$id',
  path: '/models/edit/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/models/edit/$id.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/models/$id': {
      id: '/models/$id'
      path: '/models/$id'
      fullPath: '/models/$id'
      preLoaderRoute: typeof ModelsIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/models/create': {
      id: '/models/create'
      path: '/models/create'
      fullPath: '/models/create'
      preLoaderRoute: typeof ModelsCreateLazyImport
      parentRoute: typeof rootRoute
    }
    '/types/$id': {
      id: '/types/$id'
      path: '/types/$id'
      fullPath: '/types/$id'
      preLoaderRoute: typeof TypesIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/types/create': {
      id: '/types/create'
      path: '/types/create'
      fullPath: '/types/create'
      preLoaderRoute: typeof TypesCreateLazyImport
      parentRoute: typeof rootRoute
    }
    '/types/': {
      id: '/types/'
      path: '/types'
      fullPath: '/types'
      preLoaderRoute: typeof TypesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/models/edit/$id': {
      id: '/models/edit/$id'
      path: '/models/edit/$id'
      fullPath: '/models/edit/$id'
      preLoaderRoute: typeof ModelsEditIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/types/edit/$id': {
      id: '/types/edit/$id'
      path: '/types/edit/$id'
      fullPath: '/types/edit/$id'
      preLoaderRoute: typeof TypesEditIdLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/register': typeof RegisterLazyRoute
  '/models/$id': typeof ModelsIdLazyRoute
  '/models/create': typeof ModelsCreateLazyRoute
  '/types/$id': typeof TypesIdLazyRoute
  '/types/create': typeof TypesCreateLazyRoute
  '/types': typeof TypesIndexLazyRoute
  '/models/edit/$id': typeof ModelsEditIdLazyRoute
  '/types/edit/$id': typeof TypesEditIdLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/register': typeof RegisterLazyRoute
  '/models/$id': typeof ModelsIdLazyRoute
  '/models/create': typeof ModelsCreateLazyRoute
  '/types/$id': typeof TypesIdLazyRoute
  '/types/create': typeof TypesCreateLazyRoute
  '/types': typeof TypesIndexLazyRoute
  '/models/edit/$id': typeof ModelsEditIdLazyRoute
  '/types/edit/$id': typeof TypesEditIdLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/login': typeof LoginLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/register': typeof RegisterLazyRoute
  '/models/$id': typeof ModelsIdLazyRoute
  '/models/create': typeof ModelsCreateLazyRoute
  '/types/$id': typeof TypesIdLazyRoute
  '/types/create': typeof TypesCreateLazyRoute
  '/types/': typeof TypesIndexLazyRoute
  '/models/edit/$id': typeof ModelsEditIdLazyRoute
  '/types/edit/$id': typeof TypesEditIdLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/profile'
    | '/register'
    | '/models/$id'
    | '/models/create'
    | '/types/$id'
    | '/types/create'
    | '/types'
    | '/models/edit/$id'
    | '/types/edit/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/profile'
    | '/register'
    | '/models/$id'
    | '/models/create'
    | '/types/$id'
    | '/types/create'
    | '/types'
    | '/models/edit/$id'
    | '/types/edit/$id'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/profile'
    | '/register'
    | '/models/$id'
    | '/models/create'
    | '/types/$id'
    | '/types/create'
    | '/types/'
    | '/models/edit/$id'
    | '/types/edit/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
  ProfileLazyRoute: typeof ProfileLazyRoute
  RegisterLazyRoute: typeof RegisterLazyRoute
  ModelsIdLazyRoute: typeof ModelsIdLazyRoute
  ModelsCreateLazyRoute: typeof ModelsCreateLazyRoute
  TypesIdLazyRoute: typeof TypesIdLazyRoute
  TypesCreateLazyRoute: typeof TypesCreateLazyRoute
  TypesIndexLazyRoute: typeof TypesIndexLazyRoute
  ModelsEditIdLazyRoute: typeof ModelsEditIdLazyRoute
  TypesEditIdLazyRoute: typeof TypesEditIdLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
  ProfileLazyRoute: ProfileLazyRoute,
  RegisterLazyRoute: RegisterLazyRoute,
  ModelsIdLazyRoute: ModelsIdLazyRoute,
  ModelsCreateLazyRoute: ModelsCreateLazyRoute,
  TypesIdLazyRoute: TypesIdLazyRoute,
  TypesCreateLazyRoute: TypesCreateLazyRoute,
  TypesIndexLazyRoute: TypesIndexLazyRoute,
  ModelsEditIdLazyRoute: ModelsEditIdLazyRoute,
  TypesEditIdLazyRoute: TypesEditIdLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/login",
        "/profile",
        "/register",
        "/models/$id",
        "/models/create",
        "/types/$id",
        "/types/create",
        "/types/",
        "/models/edit/$id",
        "/types/edit/$id"
      ]
    },
    "/": {
      "filePath": "index.lazy.jsx"
    },
    "/login": {
      "filePath": "login.lazy.jsx"
    },
    "/profile": {
      "filePath": "profile.lazy.jsx"
    },
    "/register": {
      "filePath": "register.lazy.jsx"
    },
    "/models/$id": {
      "filePath": "models/$id.lazy.jsx"
    },
    "/models/create": {
      "filePath": "models/create.lazy.jsx"
    },
    "/types/$id": {
      "filePath": "types/$id.lazy.jsx"
    },
    "/types/create": {
      "filePath": "types/create.lazy.jsx"
    },
    "/types/": {
      "filePath": "types/index.lazy.jsx"
    },
    "/models/edit/$id": {
      "filePath": "models/edit/$id.lazy.jsx"
    },
    "/types/edit/$id": {
      "filePath": "types/edit/$id.lazy.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
